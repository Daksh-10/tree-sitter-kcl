================================================================================
Schema Statement
================================================================================

schema Person:
    firstName: str = "John"

--------------------------------------------------------------------------------

(module
    (schema_statement
    (identifier)
    (block
        (assignment
        (dotted_name
            (identifier))
        (type
            (basic_type))
        (string
            (string_start)
            (string_content)
            (string_end))))))

================================================================================
Mixin Statement
================================================================================

mixin FullNameMixin for PersonProtocol:
    fullName = "{} {}".format(firstName, lastName)

--------------------------------------------------------------------------------

(module
    (mixin_statement
    (identifier)
    (identifier)
    (block
        (assignment
        (dotted_name
            (identifier))
        (call
            (attribute
            (string
                (string_start)
                (string_content)
                (string_end))
            (identifier))
            (argument_list
            (identifier)
            (identifier)))))))

================================================================================
Protocol Statement
================================================================================

protocol DataProtocol:
    data: str

--------------------------------------------------------------------------------

(module
    (protocol_statement
    (identifier)
    (ERROR
        (dotted_name
        (identifier))
        (type
        (basic_type)))
    (block)))

================================================================================
Rule Statement
================================================================================

rule SomeRule:
    age > 0, "rule check failure message"

--------------------------------------------------------------------------------

(module
    (rule_statement
    (identifier)
    (ERROR
        (comparison_operator
        (identifier)
        (integer)))
    (block
        (string
        (string_start)
        (string_content)
        (string_end)))))

================================================================================
Schema Statement with Check
================================================================================

schema Config:
    volumes: [{str:}]
    services: [{str:}]

    check:
        all service in services {
            service.clusterIP == "NONE" if service.type == "ClusterIP"
        }, "invalid cluster ip"

        any volume in volumes {
            volume.mountPath in ["/home/admin", "/home/myapp"]
        }

--------------------------------------------------------------------------------

(module
    (ERROR
    (schema_statement
        (identifier)
        (ERROR
        (dotted_name
            (identifier))
        (ERROR
            (type
            (list_type
                (type
                (dict_type
                    (type
                    (basic_type))
                    (type
                    (schema_type
                        (dotted_name
                        (MISSING identifier))))))))
            (identifier)
            (type
            (list_type
                (type
                (dict_type
                    (type
                    (basic_type))
                    (type
                    (schema_type
                        (dotted_name
                        (MISSING identifier))))))))
            (identifier)
            (identifier)
            (identifier)
            (type
            (schema_type
                (dotted_name
                (identifier)))))
        (ERROR
            (type
            (schema_type
                (dotted_name
                (identifier)
                (identifier))))
            (type
            (literal_type
                (string
                (string_start)
                (string_content)
                (string_end))))
            (type
            (schema_type
                (dotted_name
                (identifier)
                (identifier))))
            (type
            (literal_type
                (string
                (string_start)
                (string_content)
                (string_end))))
            (type
            (literal_type
                (string
                (string_start)
                (string_content)
                (string_end))))
            (identifier)
            (identifier)
            (identifier)
            (type
            (schema_type
                (dotted_name
                (identifier)))))
        (ERROR
            (type
            (schema_type
                (dotted_name
                (identifier)
                (identifier))))
            (identifier))
        (type
            (list_type
            (ERROR
                (type
                (literal_type
                    (string
                    (string_start)
                    (string_content)
                    (string_end)))))
            (type
                (literal_type
                (string
                    (string_start)
                    (string_content)
                    (string_end)))))))
        (block))))